// <auto-generated />
using System;
using DataBase;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataBase.Migrations
{
    [DbContext(typeof(BoardContext))]
    partial class BoardContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DataBase.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RoleName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 2,
                            RoleName = "admin"
                        },
                        new
                        {
                            Id = 1,
                            RoleName = "employee"
                        },
                        new
                        {
                            Id = 3,
                            RoleName = "headOfDepartament"
                        },
                        new
                        {
                            Id = 4,
                            RoleName = "teamRole"
                        });
                });

            modelBuilder.Entity("DataBase.Entities.Statuses", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("StatusName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Statuses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            StatusName = "Работает"
                        },
                        new
                        {
                            Id = 2,
                            StatusName = "Уволен"
                        });
                });

            modelBuilder.Entity("DataBase.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Password")
                        .HasColumnType("int");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.Property<int?>("StatuseId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("StatuseId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Employee",
                            Password = 123,
                            RoleId = 1,
                            StatuseId = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "Admin",
                            Password = 123,
                            RoleId = 2,
                            StatuseId = 1
                        },
                        new
                        {
                            Id = 3,
                            Name = "Departament",
                            Password = 123,
                            RoleId = 3,
                            StatuseId = 1
                        },
                        new
                        {
                            Id = 4,
                            Name = "TeamLead",
                            Password = 123,
                            RoleId = 4,
                            StatuseId = 1
                        });
                });

            modelBuilder.Entity("DataBase.Entities.User", b =>
                {
                    b.HasOne("DataBase.Entities.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId");

                    b.HasOne("DataBase.Entities.Statuses", "Statuse")
                        .WithMany("Users")
                        .HasForeignKey("StatuseId");

                    b.Navigation("Role");

                    b.Navigation("Statuse");
                });

            modelBuilder.Entity("DataBase.Entities.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("DataBase.Entities.Statuses", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}

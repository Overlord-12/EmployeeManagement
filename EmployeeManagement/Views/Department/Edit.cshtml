@model EmployeeManagement.Models.DepartmentViewModel

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>Department</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <div class="form-group">
                <label asp-for="DepartmentName" class="control-label"></label>
                <input asp-for="DepartmentName" class="form-control" />
                <span asp-validation-for="DepartmentName" class="text-danger"></span>
            </div>
            @if (Model.Users.Count() != 0)
            {
                <div class="form-group">
                    <select asp-for="DepartmentHeadId" class="form-control">
                        @foreach (var item in Model.Users)
                        {

                            <option value="@item.Id">@item.Login</option>
                        }
                    </select>
                </div>
            }
            else
            {
                <h2>На данный момент свободные главы департаментов отсутсвуют</h2>
            }
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="ShowPreviousEvaluations" /> Show Previous Evaluations
                </label>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@*@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}*@
